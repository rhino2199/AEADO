// Generated by Selenium IDE
using AventStack.ExtentReports;
using AventStack.ExtentReports.Model;
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Support.UI;

namespace AEADO
{

    [TestFixture]
    public class HelperMethods
    {
        private IWebDriver driver;
        private WebDriverWait wait;
        public readonly string[] USER_INFO = { "Mr. John Smith", "The Company", "Address 1", "Address 2", "City State Zip", "Canada", "Phone"  };
        public IDictionary<string, object> vars { get; private set; }
        private IJavaScriptExecutor js;
        
        public void SetUp()
        {
            driver = new ChromeDriver();
            wait = new WebDriverWait(driver, TimeSpan.FromSeconds(15));

            js = (IJavaScriptExecutor)driver;
            vars = new Dictionary<string, object>();
        }
        protected void TearDown()
        {
            driver.Quit();
        }

        public void NavigateToHome(IWebDriver driver, ExtentReports reports)
        {
            this.driver = driver;
            //Navigate to Home
            driver.Navigate().GoToUrl("https://automationexercise.com/");
            driver.Manage().Window.Size = new System.Drawing.Size(1050, 784);
            IWebElement home = driver.FindElement(By.LinkText("Home"));
            try
            {
                if(home.GetCssValue("color").Equals("rgba(255, 165, 0, 1)"))
                {
                    reports.CreateTest("Navigate to home page.").Pass("Successfully navigated to the home page.");
                } else
                {
                    reports.CreateTest("Navigate to home page.").Fail("Home page is not highlighted, not on the homepage. Possible navigation failure.");
                }
            }
            catch (NoSuchElementException ex)
            {
                Console.WriteLine(ex.Message);
                reports.CreateTest("Navigate to home page.").Fail("Home object not found. See: " + ex.Message);

            }
        }

        public void NavigateToProducts(IWebDriver driver, ExtentReports reports)
        {
            this.driver = driver;
            driver.FindElement(By.XPath("//*[@id=\"header\"]/div/div/div/div[2]/div/ul/li[2]/a")).Click();
            try
            {
                if(driver.FindElement(By.XPath("/html/body/section[2]/div[1]/div/div[2]/div/h2")).Text.Equals("ALL PRODUCTS")){
                    reports.CreateTest("Navigate to Products page.").Pass("Successfully navigated to the all products page.");
                }else
                {
                    reports.CreateTest("Navigate to Products page.").Fail("Page title is not \"All Products\". Failed to navigate to the products page.");
                }
            }
            catch (NoSuchElementException e)
            {
                reports.CreateTest("Navigate to Products page.").Fail("Page title cannot be found. Possible navigation failure. See: " + e.Message);
            }
        }
        
        public void RegisterNewUser(IWebDriver driver, ExtentReports reports)
        {
            this.driver = driver;
            //Verify Signup / Login page is displayed
            try
            {
                if (driver.FindElement(By.XPath("//*[@id=\"form\"]/div/div/div[3]/div/h2")).Displayed)
                {
                    reports.CreateTest("Navigate to signup/login page.").Pass("Successfully navigated to the signup/login");

                }
                else
                {
                    reports.CreateTest("Navigate to signup/login page.").Fail("Login page text is not displayed. Possible navigation failure.");
                }
            }
            catch (NoSuchElementException ex)
            {
                reports.CreateTest("Navigate to signup/login page.").Fail("Login page is not displayed. See: " + ex.Message);

            }

            //Sign up
            driver.FindElement(By.Name("name")).Clear();
            driver.FindElement(By.Name("name")).SendKeys("John Smith");
            driver.FindElement(By.XPath("//*[@id=\"form\"]/div/div/div[3]/div/form/input[3]")).Clear();
            driver.FindElement(By.XPath("//*[@id=\"form\"]/div/div/div[3]/div/form/input[3]")).SendKeys("jsmith@email.org");
           
            driver.FindElement(By.XPath("//*[@id=\"form\"]/div/div/div[3]/div/form/button")).Click();

            try
            {
                if (driver.FindElement(By.XPath("//*[@id=\"form\"]/div/div/div[3]/div/form/p")).Displayed)
                {
                    reports.CreateTest("User already exists.").Fail("The given user credentials already exist in the system. The signup process has been cancelled.");
                    return;
                }

            } catch (NoSuchElementException e){
            }
           
            //Enter User Info
            driver.FindElement(By.Id("name")).Clear();
            driver.FindElement(By.Id("name")).SendKeys("John Smith");
            string title = "Mr";
            if (title.Equals("Mr"))
            {
                driver.FindElement(By.Id("id_gender1")).Click();
            }
            else
            {
                driver.FindElement(By.Id("id_gender2")).Click();
            }
            driver.FindElement(By.Id("password")).Clear();
            driver.FindElement(By.Id("password")).SendKeys("Password");
            driver.FindElement(By.Id("days")).Click();
            {
                var dropdown = driver.FindElement(By.Id("days"));
                dropdown.FindElement(By.XPath("//option[. = '4']")).Click();
            }
            driver.FindElement(By.Id("months")).Click();
            {
                var dropdown = driver.FindElement(By.Id("months"));
                dropdown.FindElement(By.XPath("//option[. = 'January']")).Click();
            }
            driver.FindElement(By.Id("years")).Click();
            {
                var dropdown = driver.FindElement(By.Id("years"));
                dropdown.FindElement(By.XPath("//option[. = '1986']")).Click();
            }
            driver.FindElement(By.Id("newsletter")).Click();
            driver.FindElement(By.Id("optin")).Click();
            driver.FindElement(By.Id("first_name")).Clear();
            driver.FindElement(By.Id("first_name")).SendKeys("John");
            driver.FindElement(By.Id("last_name")).Clear();
            driver.FindElement(By.Id("last_name")).SendKeys("Smith");
            driver.FindElement(By.Id("company")).Clear();
            driver.FindElement(By.Id("company")).SendKeys("The Company");
            driver.FindElement(By.Id("address1")).Clear();
            driver.FindElement(By.Id("address1")).SendKeys("Address 1");
            driver.FindElement(By.Id("address2")).Clear();
            driver.FindElement(By.Id("address2")).SendKeys("Address 2");

            driver.FindElement(By.XPath("//*[@id=\"country\"]")).Click();
            {
                var dropdown = driver.FindElement(By.Id("country"));
                dropdown.FindElement(By.XPath("//option[. = 'Canada']")).Click();
            }
            driver.FindElement(By.Id("state")).Clear();
            driver.FindElement(By.Id("state")).SendKeys("State");
            driver.FindElement(By.Id("city")).Clear();
            driver.FindElement(By.Id("city")).SendKeys("City");
            driver.FindElement(By.Id("zipcode")).Clear();
            driver.FindElement(By.Id("zipcode")).SendKeys("Zip");
            driver.FindElement(By.Id("mobile_number")).Clear();
            driver.FindElement(By.Id("mobile_number")).SendKeys("Phone");
            driver.FindElement(By.CssSelector(".btn:nth-child(22)")).Click();
            //Verify user created
            IWebElement element = driver.FindElement(By.XPath("//*[@id=\"form\"]/div/div/div/h2/b"));

            try
            {
                if (element.Text.Equals("ACCOUNT CREATED!")){
                    reports.CreateTest("Account Created").Pass("Account successfully created.");
                } else
                {
                    reports.CreateTest("Account Created").Fail("Page title does not equal \"ACCOUNT CREATED\". Account creation or navigavtion failure.");
                }
            }
            catch (NoSuchElementException ex)
            {
                reports.CreateTest("Account Created").Fail("Page title not found. See: " + ex.Message);
            }
            driver.FindElement(By.LinkText("Continue")).Click();
            try
            {
                if (driver.FindElement(By.XPath("//*[@id=\"header\"]/div/div/div/div[2]/div/ul/li[10]/a/b")).Text.Equals("John Smith"))
                {
                    reports.CreateTest("Account Created and logged in").Pass("Account successfully created and logged in.");
                } else
                {
                    reports.CreateTest("Account Created and logged in").Pass("Account is not logged in. Possible error.");

                }
            }
            catch (NoSuchElementException ex)
            {
                reports.CreateTest("Account Created and logged in").Fail("Could not find logged in banner. User not logged in. See: " + ex.Message);
            }

        }

        public void DeleteUser(IWebDriver driver, ExtentReports reports)
        {

            //Delete account and verify deletion
            try
            {
                driver.FindElement(By.LinkText("Delete Account")).Click();
            } catch (NoSuchElementException ex)
            {
                reports.CreateTest("Delete user option not available.").Fail("The delete user button was not available. The user must be logged in to delete their account. See: " + ex.Message);
                return;
            }
            IWebElement element = driver.FindElement(By.XPath("//*[@id=\"form\"]/div/div/div/h2/b"));
            try
            {
                if (element.Text.Equals("ACCOUNT DELETED!"))
                {
                    reports.CreateTest("Account Deleted").Pass("Account was successfully deleted.");
                } else
                {
                    reports.CreateTest("Account Deleted").Fail("Page title was not \"Account Deleted\". Account was not deleted");
                }
            }
            catch (NoSuchElementException ex)
            {
                reports.CreateTest("Account Deleted").Fail("\"Account deleted\" page title not found. Account deletion failure. See: " + ex.Message);
            }
            driver.FindElement(By.LinkText("Continue")).Click();
        }


        public void Login(IWebDriver driver, ExtentReports reports, string user = "jsmith@email.org", string pass = "Password")
        {

            try
            {
                if (driver.FindElement(By.XPath("//*[@id=\"form\"]/div/div/div[1]/div/h2")).Displayed)
                {
                    reports.CreateTest("Navigate to signup/login page.").Pass("Successfully navigated to the signup/login");

                } else
                {
                    reports.CreateTest("Navigate to signup/login page.").Fail("Login page text is not displayed. Possible navigation failure.");
                }
            }
            catch (NoSuchElementException ex)
            {
                reports.CreateTest("Navigate to signup/login page.").Fail("Login page is not displayed. See: " + ex.Message);

            }

            driver.FindElement(By.XPath("//*[@id=\"form\"]/div/div/div[1]/div/form/input[2]")).Clear();
            driver.FindElement(By.XPath("//*[@id=\"form\"]/div/div/div[1]/div/form/input[2]")).SendKeys(user);
            driver.FindElement(By.XPath("//*[@id=\"form\"]/div/div/div[1]/div/form/input[3]")).Clear();
            driver.FindElement(By.XPath("//*[@id=\"form\"]/div/div/div[1]/div/form/input[3]")).SendKeys(pass);

            driver.FindElement(By.XPath("//*[@id=\"form\"]/div/div/div[1]/div/form/button")).Click();
            try
            {
                string name = driver.FindElement(By.XPath("//*[@id=\"header\"]/div/div/div/div[2]/div/ul/li[10]/a/b")).Text;
                if (name.Equals("John Smith"))
                {
                    reports.CreateTest("Logged in").Pass("The user was successfully logged in.");
                } else
                {
                    reports.CreateTest("Logged in").Fail("The logged in text does not match the name for the account. Login or account processing failed.");
                }
            }
            catch (NoSuchElementException ex)
            {
                reports.CreateTest("Logged in").Fail("Logged in as ____ text does not exist or cannot be found. Login failed. See: " + ex.Message);
            }

        }

        public void Logout(IWebDriver driver, ExtentReports reports)
        {
            try
            {
                driver.FindElement(By.LinkText("Logout")).Click();
                if (driver.FindElement(By.XPath("//*[@id=\"form\"]/div/div/div[3]/div/h2")).Displayed)
                {
                    reports.CreateTest("Logged out.").Pass("The current user was successfully logged out.");
                } else
                {
                    reports.CreateTest("Logged out.").Fail("The user was not navigated to the login page after logout.");
                }
            } catch (NoSuchElementException ex)
            {
                reports.CreateTest("Logged out").Fail("Logout button not available or not navigated to login after logout. See: " + ex.Message);
                return;
            }
        }

        public void NavToLogin(IWebDriver driver, ExtentReports reports)
        {
            try
            {
                driver.FindElement(By.LinkText("Signup / Login")).Click();
            }
            catch (NoSuchElementException ex)
            {
                reports.CreateTest("Signup / Login not found.").Fail("Signup/Login link not found. Is there an account still logged in? See: " + ex.Message);
            }
        }

        public void VerifyAddress(IWebDriver driver, ExtentReports reports)
        {
            try
            {
                var test = reports.CreateTest("Verify Shipping Address");
                string addLine = driver.FindElement(By.XPath("//*[@id=\"address_delivery\"]/li[2]")).Text;
                if (addLine.Equals(this.USER_INFO[0])) test.CreateNode("Name Line").Pass(addLine + "=" + this.USER_INFO[0]);
                else test.CreateNode("Name Line").Fail(addLine + "!=" + this.USER_INFO[0]);
                addLine = driver.FindElement(By.XPath("//*[@id=\"address_delivery\"]/li[3]")).Text;
                if (addLine.Equals(this.USER_INFO[1])) test.CreateNode("Company Line").Pass(addLine + "=" + this.USER_INFO[1]);
                else test.CreateNode("Company Line").Fail(addLine + "!=" + this.USER_INFO[0]);
                addLine = driver.FindElement(By.XPath("//*[@id=\"address_delivery\"]/li[4]")).Text;
                if (addLine.Equals(this.USER_INFO[2])) test.CreateNode("Address 1 Line").Pass(addLine + "=" + this.USER_INFO[2]);
                else test.CreateNode("Address 1 Line").Fail(addLine + "!=" + this.USER_INFO[0]);
                addLine = driver.FindElement(By.XPath("//*[@id=\"address_delivery\"]/li[5]")).Text;
                if (addLine.Equals(this.USER_INFO[3])) test.CreateNode("Address 2 Line").Pass(addLine + "=" + this.USER_INFO[3]);
                else test.CreateNode("Address 2 Line").Fail(addLine + "!=" + this.USER_INFO[0]);
                addLine = driver.FindElement(By.XPath("//*[@id=\"address_delivery\"]/li[6]")).Text;
                if (addLine.Equals(this.USER_INFO[4])) test.CreateNode("City State Zip Line").Pass(addLine + "=" + this.USER_INFO[4]);
                else test.CreateNode("City State Zip Line").Fail(addLine + "!=" + this.USER_INFO[0]);
                addLine = driver.FindElement(By.XPath("//*[@id=\"address_delivery\"]/li[7]")).Text;
                if (addLine.Equals(this.USER_INFO[5])) test.CreateNode("Country Line").Pass(addLine + "=" + this.USER_INFO[5]);
                else test.CreateNode("Country Line").Fail(addLine + "!=" + this.USER_INFO[0]);
                addLine = driver.FindElement(By.XPath("//*[@id=\"address_delivery\"]/li[8]")).Text;
                if (addLine.Equals(this.USER_INFO[6])) test.CreateNode("Phone Line").Pass(addLine + "=" + this.USER_INFO[6]);
                else test.CreateNode("Phone Line").Fail(addLine + "!=" + this.USER_INFO[0]);

            }
            catch (NoSuchElementException ex)
            {
                reports.CreateTest("Verify Shipping Address").CreateNode("Address not found").Fail("Shippinng address objects could not be found. See: " + ex.Message);
            }
            //Verify billing address
            try
            {
                var test = reports.CreateTest("Verify Billing Address");
                string addLine = driver.FindElement(By.XPath("//*[@id=\"address_invoice\"]/li[2]")).Text;
                if (addLine.Equals(this.USER_INFO[0])) test.CreateNode("Name Line").Pass(addLine + "=" + this.USER_INFO[0]);
                else test.CreateNode("Name Line").Fail(addLine + "!=" + this.USER_INFO[0]);
                addLine = driver.FindElement(By.XPath("//*[@id=\"address_invoice\"]/li[3]")).Text;
                if (addLine.Equals(this.USER_INFO[1])) test.CreateNode("Company Line").Pass(addLine + "=" + this.USER_INFO[1]);
                else test.CreateNode("Company Line").Fail(addLine + "!=" + this.USER_INFO[0]);
                addLine = driver.FindElement(By.XPath("//*[@id=\"address_invoice\"]/li[4]")).Text;
                if (addLine.Equals(this.USER_INFO[2])) test.CreateNode("Address 1 Line").Pass(addLine + "=" + this.USER_INFO[2]);
                else test.CreateNode("Address 1 Line").Fail(addLine + "!=" + this.USER_INFO[0]);
                addLine = driver.FindElement(By.XPath("//*[@id=\"address_invoice\"]/li[5]")).Text;
                if (addLine.Equals(this.USER_INFO[3])) test.CreateNode("Address 2 Line").Pass(addLine + "=" + this.USER_INFO[3]);
                else test.CreateNode("Address 2 Line").Fail(addLine + "!=" + this.USER_INFO[0]);
                addLine = driver.FindElement(By.XPath("//*[@id=\"address_invoice\"]/li[6]")).Text;
                if (addLine.Equals(this.USER_INFO[4])) test.CreateNode("City State Zip Line").Pass(addLine + "=" + this.USER_INFO[4]);
                else test.CreateNode("City State Zip Line").Fail(addLine + "!=" + this.USER_INFO[0]);
                addLine = driver.FindElement(By.XPath("//*[@id=\"address_invoice\"]/li[7]")).Text;
                if (addLine.Equals(this.USER_INFO[5])) test.CreateNode("Country Line").Pass(addLine + "=" + this.USER_INFO[5]);
                else test.CreateNode("Country Line").Fail(addLine + "!=" + this.USER_INFO[0]);
                addLine = driver.FindElement(By.XPath("//*[@id=\"address_invoice\"]/li[8]")).Text;
                if (addLine.Equals(this.USER_INFO[6])) test.CreateNode("Phone Line").Pass(addLine + "=" + this.USER_INFO[6]);
                else test.CreateNode("Phone Line").Fail(addLine + "!=" + this.USER_INFO[0]);
            }
            catch (Exception ex)
            {
                reports.CreateTest("Verify Billing Address").CreateNode("Address not found").Fail("Billing address objects could not be found. See: " + ex.Message);
            }
        }

        public void VerifyCart(IWebDriver driver, ExtentReports reports, string product1, string price1, string product2, string price2)
        {
            string cartProduct;
            string cartPrice;
            string cartQuantity;
            string cartTotal;
            try
            {
                var test = reports.CreateTest("Item 1 in Cart");
                cartProduct = driver.FindElement(By.XPath("//*[@id=\"product-1\"]/td[2]/h4/a")).Text;
                if (cartProduct.Equals(product1))
                    test.CreateNode("Product Name").Pass("Cart product name: " + cartProduct + " | Product page product name: " + product1);
                else
                    test.CreateNode("Product Name").Fail("Cart product name: " + cartProduct + " | Product page product name: " + product1);
                cartPrice = driver.FindElement(By.XPath("//*[@id=\"product-1\"]/td[3]/p")).Text;
                if (cartPrice.Equals(price1))
                    test.CreateNode("Product Price").Pass("Cart product price: " + cartPrice + " | Product page product price: " + price1);
                else
                    test.CreateNode("Product Price").Fail("Cart product price: " + cartPrice + " | Product page product price: " + price1);
                cartQuantity = driver.FindElement(By.XPath("//*[@id=\"product-1\"]/td[4]/button")).Text;
                if (cartQuantity.Equals("1"))
                    test.CreateNode("Product Quantity").Pass("Cart product quantity: " + cartQuantity + " | Product page product quantity: 1");
                else
                    test.CreateNode("Product Quantity").Fail("Cart product quantity: " + cartQuantity + " | Product page product quantity: 1");
                cartTotal = driver.FindElement(By.XPath("//*[@id=\"product-1\"]/td[5]/p")).Text;
                if (cartTotal.Equals(price1))
                    test.CreateNode("Product Total").Pass("Cart product total: " + cartTotal + " | Product page product total: " + price1);
                else
                    test.CreateNode("Product Total").Fail("Cart product total: " + cartTotal + " | Product page product total: " + price1);

            }
            catch (NoSuchElementException ex)
            {
                reports.CreateTest("Item 1 in Cart").Fail("Item 1 could not be found in the cart. See: " + ex.Message);
            }

            try
            {
                var test = reports.CreateTest("Item 2 in Cart");
                cartProduct = driver.FindElement(By.XPath("//*[@id=\"product-2\"]/td[2]/h4/a")).Text;
                if (cartProduct.Equals(product2))
                    test.CreateNode("Product Name").Pass("Cart product name: " + cartProduct + " | Product page product name: " + product2);
                else
                    test.CreateNode("Product Name").Fail("Cart product name: " + cartProduct + " | Product page product name: " + product2);
                cartPrice = driver.FindElement(By.XPath("//*[@id=\"product-2\"]/td[3]/p")).Text;
                if (cartPrice.Equals(price2))
                    test.CreateNode("Product Price").Pass("Cart product price: " + cartPrice + " | Product page product price: " + price2);
                else
                    test.CreateNode("Product Price").Fail("Cart product price: " + cartPrice + " | Product page product price: " + price2);
                cartQuantity = driver.FindElement(By.XPath("//*[@id=\"product-2\"]/td[4]/button")).Text;
                if (cartQuantity.Equals("1"))
                    test.CreateNode("Product Quantity").Pass("Cart product quantity: " + cartQuantity + " | Product page product quantity: 1");
                else
                    test.CreateNode("Product Quantity").Fail("Cart product quantity: " + cartQuantity + " | Product page product quantity: 1");
                cartTotal = driver.FindElement(By.XPath("//*[@id=\"product-2\"]/td[5]/p")).Text;
                if (cartTotal.Equals(price2))
                    test.CreateNode("Product Total").Pass("Cart product total: " + cartTotal + " | Product page product total: " + price2);
                else
                    test.CreateNode("Product Total").Fail("Cart product total: " + cartTotal + " | Product page product total: " + price2);

            }
            catch (NoSuchElementException ex)
            {
                reports.CreateTest("Item 2 in Cart").Fail("Item 2 could not be found in the cart. See: " + ex.Message);
            }
        }

        public IWebElement GetElement(string XPath, IWebDriver driver)
        {
            IWebElement result = null;
            try
            {
                Console.WriteLine(driver.Url);
                result = driver.FindElement(By.CssSelector(XPath));
            } catch (NoSuchElementException ex) 
            {
                if (driver.Url.Contains("#google"))
                {
                    driver.Url = driver.Url.Substring(0, driver.Url.IndexOf('#'));
                }
                result = driver.FindElement(By.CssSelector(XPath));
            }
            catch (ElementClickInterceptedException ex)
            {
                
            }

            return result;
        }
    }
}
